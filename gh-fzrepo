#!/usr/bin/env bash

set -euo pipefail

readonly SCRIPT_NAME="$(basename "$0")"
readonly VERSION="0.0.2"
readonly LICENSE="MIT"
readonly GITHUB_URL="https://github.com"
readonly AUTHOR="sheepla"
readonly CODE_MANGLER="botus99"

readonly KEYBINDINGS="\
-----------------------------------
| CTRL + O |   Open with browser  | 
| ENTER    |   View README        |
| TAB      |   Select multiple    |
| ESC      |   Quit               |
-----------------------------------"

function _version() {
    echo -e "\033[1m${SCRIPT_NAME}\033[0m"
    echo "---------"
    echo "v${VERSION}"
    echo "Author: ${AUTHOR} (${GITHUB_URL}/${AUTHOR})"
    echo "Tweaker: ${CODE_MANGLER} (${GITHUB_URL}/${CODE_MANGLER})"
    echo "Released under the ${LICENSE} license."
}

function _help() {
    echo -e "\033[1m${SCRIPT_NAME}\033[0m"
    echo "---------"
    echo "GitHub repository browser with fzf"
    echo ""
    echo "USAGE"
    echo "    $SCRIPT_NAME KEYWORDS..."
    echo "    $SCRIPT_NAME -h|--help"
    echo "    $SCRIPT_NAME -v|--version"
}

function _main() {

	if [[ "${#}" -le 0 ]]; then
		_help
		_error "${SCRIPT_NAME} requires KEYWORDS"
		return 1
	fi

	for arg in "${@}"; do
		case "${arg}" in
		-h | --help)
			_help
			return 0
			;;
		-v | --version)
			_version
			return 0
			;;
		esac
	done

	_search_repo "${*}" | _fzf
}

function _error() {
	printf "[\e[31m ERROR \e[m] %s\n" "${*}"
}

function _encode() {
	echo -n "${*}" | od -tx1 -An | tr ' ' % | tr -d \\n
}

function _search_repo() {
	local query
	query="$(_encode "${*}")"

	gh api \
		--header "Accept: application/vnd.github.v3+json" \
		--jq ".items[].full_name" \
		"search/repositories?q=${query}"
}

function _fzf() {
	fzf </dev/stdin \
		--multi \
		--header "${KEYBINDINGS}" \
		--preview "gh repo view {} | glow" \
		--bind "enter:execute(gh repo view {})" \
		--bind "ctrl-o:execute(gh repo view {} -w &>/dev/null &)" \
		--reverse \
		--border \
		--border=rounded \
		--margin=1% \
		--gap=1
}

_main "${@}"
exit "${?}"
